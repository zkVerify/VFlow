
//! Autogenerated weights for `pallet_benchmark_dummy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-04-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `DESKTOP-37J5UBI`, CPU: `Intel(R) Core(TM) Ultra 9 185H`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`
// Executed Command:
// ./target/release/zkv-para-evm-node
// benchmark
// pallet
// --pallet
// pallet-benchmark-dummy
// --extrinsic
//
// --template
// scripts/templates/pallets-weight-template.hbs
// --output
// pallets/pallet-benchmark-dummy/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight function needed for `pallet_benchmark_dummy`.
pub trait WeightInfo {
    fn bench_heavy_contract_call() -> Weight;
}

// For backwards compatibility and tests.
impl WeightInfo for () {
    fn bench_heavy_contract_call() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `109`
        //  Estimated: `3501`
        // Minimum execution time: 8_740_000 picoseconds.
        Weight::from_parts(9_191_000, 3501)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
}