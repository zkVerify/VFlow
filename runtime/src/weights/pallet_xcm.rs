// Copyright 2024, Horizen Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_xcm`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-04-17, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `miklap`, CPU: `11th Gen Intel(R) Core(TM) i7-11850H @ 2.50GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// /home/mdamico/devel/zkVerify-EVM-Parachain/target/release/zkv-para-evm-node
// benchmark
// pallet
// --genesis-builder=spec
// --pallet
// pallet-xcm
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --heap-pages=4096
// --header
// /home/mdamico/devel/zkVerify-EVM-Parachain/HEADER-APACHE2
// --output
// /home/mdamico/devel/zkVerify-EVM-Parachain/runtime/src/weights/pallet_xcm.rs
// --template
// /home/mdamico/devel/zkVerify-EVM-Parachain/scripts/templates/deploy-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weights for `pallet_xcm` using the zkVerify node and recommended hardware.
pub struct ZKVEvmWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> pallet_xcm::WeightInfo for ZKVEvmWeight<T> {
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    fn send() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6`
        //  Estimated: `1491`
        // Minimum execution time: 30_337_000 picoseconds.
        Weight::from_parts(31_831_000, 1491)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: `Benchmark::Override` (r:0 w:0)
    /// Proof: `Benchmark::Override` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn teleport_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 18_446_744_073_709_551_000 picoseconds.
        Weight::from_parts(18_446_744_073_709_551_000, 0)
    }
    /// Storage: `Benchmark::Override` (r:0 w:0)
    /// Proof: `Benchmark::Override` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn reserve_transfer_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 18_446_744_073_709_551_000 picoseconds.
        Weight::from_parts(18_446_744_073_709_551_000, 0)
    }
    /// Storage: `Benchmark::Override` (r:0 w:0)
    /// Proof: `Benchmark::Override` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn transfer_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 18_446_744_073_709_551_000 picoseconds.
        Weight::from_parts(18_446_744_073_709_551_000, 0)
    }
    /// Storage: `Benchmark::Override` (r:0 w:0)
    /// Proof: `Benchmark::Override` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn execute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 18_446_744_073_709_551_000 picoseconds.
        Weight::from_parts(18_446_744_073_709_551_000, 0)
    }
    /// Storage: `PolkadotXcm::SupportedVersion` (r:0 w:1)
    /// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn force_xcm_version() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 14_552_000 picoseconds.
        Weight::from_parts(15_300_000, 0)
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    fn force_default_xcm_version() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 4_783_000 picoseconds.
        Weight::from_parts(5_115_000, 0)
    }
    /// Storage: `PolkadotXcm::VersionNotifiers` (r:1 w:1)
    /// Proof: `PolkadotXcm::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::QueryCounter` (r:1 w:1)
    /// Proof: `PolkadotXcm::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::Queries` (r:0 w:1)
    /// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn force_subscribe_version_notify() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6`
        //  Estimated: `3471`
        // Minimum execution time: 40_617_000 picoseconds.
        Weight::from_parts(42_048_000, 3471)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `PolkadotXcm::VersionNotifiers` (r:1 w:1)
    /// Proof: `PolkadotXcm::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::Queries` (r:0 w:1)
    /// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn force_unsubscribe_version_notify() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `99`
        //  Estimated: `3564`
        // Minimum execution time: 40_236_000 picoseconds.
        Weight::from_parts(41_046_000, 3564)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: `PolkadotXcm::XcmExecutionSuspended` (r:0 w:1)
    /// Proof: `PolkadotXcm::XcmExecutionSuspended` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    fn force_suspension() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 4_592_000 picoseconds.
        Weight::from_parts(4_791_000, 0)
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: `PolkadotXcm::SupportedVersion` (r:5 w:2)
    /// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn migrate_supported_version() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `22`
        //  Estimated: `13387`
        // Minimum execution time: 30_062_000 picoseconds.
        Weight::from_parts(30_718_000, 13387)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `PolkadotXcm::VersionNotifiers` (r:5 w:2)
    /// Proof: `PolkadotXcm::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn migrate_version_notifiers() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `26`
        //  Estimated: `13391`
        // Minimum execution time: 29_665_000 picoseconds.
        Weight::from_parts(30_139_000, 13391)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `PolkadotXcm::VersionNotifyTargets` (r:6 w:0)
    /// Proof: `PolkadotXcm::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn already_notified_target() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `61`
        //  Estimated: `15901`
        // Minimum execution time: 32_524_000 picoseconds.
        Weight::from_parts(33_226_000, 15901)
            .saturating_add(T::DbWeight::get().reads(6_u64))
    }
    /// Storage: `PolkadotXcm::VersionNotifyTargets` (r:2 w:1)
    /// Proof: `PolkadotXcm::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    fn notify_current_targets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `39`
        //  Estimated: `5979`
        // Minimum execution time: 34_958_000 picoseconds.
        Weight::from_parts(35_526_000, 5979)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `PolkadotXcm::VersionNotifyTargets` (r:4 w:0)
    /// Proof: `PolkadotXcm::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn notify_target_migration_fail() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `36`
        //  Estimated: `10926`
        // Minimum execution time: 20_538_000 picoseconds.
        Weight::from_parts(20_723_000, 10926)
            .saturating_add(T::DbWeight::get().reads(4_u64))
    }
    /// Storage: `PolkadotXcm::VersionNotifyTargets` (r:5 w:2)
    /// Proof: `PolkadotXcm::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn migrate_version_notify_targets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `33`
        //  Estimated: `13398`
        // Minimum execution time: 28_989_000 picoseconds.
        Weight::from_parts(29_477_000, 13398)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `PolkadotXcm::VersionNotifyTargets` (r:5 w:2)
    /// Proof: `PolkadotXcm::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    fn migrate_and_notify_old_targets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `39`
        //  Estimated: `13404`
        // Minimum execution time: 47_548_000 picoseconds.
        Weight::from_parts(49_760_000, 13404)
            .saturating_add(T::DbWeight::get().reads(7_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: `PolkadotXcm::QueryCounter` (r:1 w:1)
    /// Proof: `PolkadotXcm::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::Queries` (r:0 w:1)
    /// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn new_query() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `1485`
        // Minimum execution time: 4_489_000 picoseconds.
        Weight::from_parts(4_743_000, 1485)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `PolkadotXcm::Queries` (r:1 w:1)
    /// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn take_response() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `7576`
        //  Estimated: `11041`
        // Minimum execution time: 38_367_000 picoseconds.
        Weight::from_parts(38_866_000, 11041)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: `PolkadotXcm::AssetTraps` (r:1 w:1)
    /// Proof: `PolkadotXcm::AssetTraps` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn claim_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `23`
        //  Estimated: `3488`
        // Minimum execution time: 60_339_000 picoseconds.
        Weight::from_parts(65_103_000, 3488)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
}
